source("http://bioconductor.org/biocLite.R")
biocLite("omicade")
install.packages("~/Dropbox (VHIR)/Charlas y presentaciones/2015-06-Sevilla-MetMultivOmics/labs/omicade4_1.8.0.zip", repos = NULL)
install.packages("~/Dropbox (VHIR)/Charlas y presentaciones/2015-06-Sevilla-MetMultivOmics/PerSevilla/Rcode/omicade4_1.8.0.tar.gz", repos = NULL, type = "source")
biocLite("mixomics")
biocLite("mixOmics")
LOG_CNT<-c(7.66, 6.98, 7.80, 5.26, 5.44, 5.80, 7.41, 7.33, 7.04, 3.51, 2.91, 3.66)
meat<-rep(1:4, each=3)
dades<-data.frame (meat, LOG_CNT)
dades$meat<-as.factor(dades$meat)
levels(dades$meat)<-c("Commercial", "Vacuum", "Mixed Gas", "CO2")
dades
#attach(dades)
###################################################
### chunk number 2: Model
###################################################
model<- dades$LOG_CNT ~ dades$meat
###################################################
### chunk number 3: ANOVA1F
###################################################
aov1<-aov (model, data=dades)
summary(aov1)
model<- dades[1:9,]$LOG_CNT ~ dades[1:9,]$meat
###################################################
### chunk number 3: ANOVA1F
###################################################
aov1<-aov (model, data=dades)
summary(aov1)
meat<-rep(1:4, each=3)
dades<-data.frame (meat, LOG_CNT)
dades$meat<-as.factor(dades$meat)
levels(dades$meat)<-c("Commercial", "Vacuum", "Mixed Gas", "CO2")
dades
#attach(dades)
###################################################
### chunk number 2: Model
###################################################
model<- dades[1:9,]$LOG_CNT ~ dades[1:9,]$meat
###################################################
### chunk number 3: ANOVA1F
###################################################
aov1<-aov (model, data=dades)
summary(aov1)
model<- dades$LOG_CNT ~ dades$meat
###################################################
### chunk number 3: ANOVA1F
###################################################
aov1<-aov (model, data=dades)
summary(aov1)
LOG_CNT<-c(7.66, 6.98, 7.80, 5.26, 5.44, 5.80, 7.41, 7.33, 7.04, 6.51, 7.91, 6.66)
meat<-rep(1:4, each=3)
dades<-data.frame (meat, LOG_CNT)
dades$meat<-as.factor(dades$meat)
levels(dades$meat)<-c("Commercial", "Vacuum", "Mixed Gas", "CO2")
dades
#attach(dades)
###################################################
### chunk number 2: Model
###################################################
model<- dades$LOG_CNT ~ dades$meat
###################################################
### chunk number 3: ANOVA1F
###################################################
aov1<-aov (model, data=dades)
summary(aov1)
install.packages("cgdsr")
install.packages(c("tkrplot", "Formula", "RSvgDevice", "RCurl"))
source("http://bioconductor.org/biocLite.R")
biocLite("GSEABase", "GSEAlm","geNetClassifier","Biobase", "phenoTest")
biocLite("canceR")
canceR()
library(canceR)
canceR()
canceRHelp()
x<- c(7.3, 8.5, 7.4, 6.4, 6.2, 8.2, 7.3)
(m <- mean(x))
(s <- sd(x))
source("http://bioconductor.org/biocLite.R")
if (!(require(Biobase))) biocLite("Biobase")
if (!(require(affy))) biocLite("affy")
if (!(require(arrayQualityMetrics))) biocLite("arrayQualityMetrics")
biocLite()
biocLite("goProfiles")
setwd("~/Dropbox (VHIR)/bioSigTools")
shiny::runApp()
runApp()
installifnot <- function(pckgName){
if (!(require(pckgName, character.only = TRUE))) {
install.packages(pckgName)
}else{
print(paste("Package", pckgName, "already installed", sep = " "))
}
}
installBiocifnot <- function(pckgName){
if (!(require(pckgName, character.only = TRUE))) {
source("https://bioconductor.org/biocLite.R")
biocLite(eval(pckgName), suppressUpdates = TRUE)
}else{
print(paste("Package", pckgName, "already installed", sep = " "))
}
}
installifnot("shiny")
installifnot("shinydashboard")
installifnot("shinyjs")
installifnot("memoise")
installBiocifnot("Rgraphviz")
installBiocifnot("AnnotationDbi")
installBiocifnot("annotate")
install.packages("RCurl")
installBiocifnot("annotate")
installBiocifnot <- function(pckgName){
if (!(require(pckgName, character.only = TRUE))) {
source("https://bioconductor.org/biocLite.R")
biocLite(eval(pckgName), suppressUpdates = TRUE)
}else{
print(paste("Package", pckgName, "already installed", sep = " "))
}
}
installBiocifnot("annotate")
installBiocifnot("hgu133a.db")
installBiocifnot("org.Hs.eg.db")
installBiocifnot("org.Mm.eg.db")
installBiocifnot("KEGG.db")
installBiocifnot("reactome.db")
installBiocifnot("GO.db")
installBiocifnot("GOstats")
installBiocifnot("topGO")
installBiocifnot("goProfiles")
installifnot("GSA")
installifnot <- function(pckgName){
if (!(require(pckgName, character.only = TRUE))) {
install.packages(pckgName)
}else{
print(paste("Package", pckgName, "already installed", sep = " "))
}
}
print(paste("Package", pckgName, "already installed", sep = " "))
}
}
installBiocifnot <- function(pckgName){
)
installifnot <- function(pckgName){
if (!(require(pckgName, character.only = TRUE))) {
install.packages(pckgName)
}else{
print(paste("Package", pckgName, "already installed", sep = " "))
}
}
installifnot("GSA")
setwd("~/Dropbox (Nuevo Equipo VHIR10)/UEB-compartida/Shiny/Apps/biosigtools")
shiny::runApp()
